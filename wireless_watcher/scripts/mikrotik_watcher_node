#!/usr/bin/python
import argparse
import rospy
from wireless_watcher.mikrotik_watcher import MikrotikWatcher
import wireless_msgs.msg
import socket
import subprocess

if __name__ == "__main__":
    rospy.init_node("wireless_watcher_node")
    robot = rospy.get_param('/robot_name', 'p3_001')
    user = rospy.get_param("~username", "admin")
    psk = rospy.get_param("~password", "")
    hostname = rospy.get_param("~hostname", "10.101.64.194")
    port = int(rospy.get_param("~port", 8728))
    hz = int(rospy.get_param("~hz", 1))
    device = rospy.get_param("~dev", None)
    chip = rospy.get_param('~wifi_hardware', "Mikrotik Netbox 5")
    kernel = rospy.get_param("~kernel", None)
    rate = rospy.Rate(hz)

    if kernel is None:
        kernel = subprocess.check_output(["uname", "-r"], stderr=subprocess.STDOUT).strip("\n")
    
    rospy.loginfo("Connecting to mikrotik device {u}@{h}:{p}".format(u=user, h=hostname, p=port))
    try:
        mikrotik_api = MikrotikWatcher(hostname, port, user, psk, chip, kernel)
    except socket.error as err:
        raise socket.error("Failed to connect find mikrotik device at {h}:{p}\n{e}".format(h=hostname, p=port, e=err))
    if device is None:
        detected_interfaces = mikrotik_api.getWirelessInterfaces()
        if len(detected_interfaces):
            device = detected_interfaces[0]["=name"]
        else:
            raise ValueError("No wireless device was set and none could be identified")
    while not rospy.is_shutdown():
        mikrotik_api.publishNetworkHealth(device, robot)
        rate.sleep()
        
    
