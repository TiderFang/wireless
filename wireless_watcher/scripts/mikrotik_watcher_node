#!/usr/bin/python
# Software License Agreement (BSD License)
#
#  Copyright (c) 2018, Locus Robotics
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#  # Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  # Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#  # Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#  COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

import argparse
import socket

import rospy

from wireless_watcher.mikrotik_watcher import MikrotikWatcher


if __name__ == '__main__':
    rospy.init_node('wireless_watcher_node')
    robot = rospy.get_param('/robot_name', 'p3_001')
    user = rospy.get_param('~username', 'admin')
    psk = rospy.get_param('~password', '')
    hostname = rospy.get_param('~hostname', '10.101.64.194')
    port = rospy.get_param('~port', 8728)
    hz = rospy.get_param('~period', 1)
    device = rospy.get_param('~dev', None)
    chip = rospy.get_param('~wifi_hardware', 'Mikrotik Netbox 5')
    rate = rospy.Rate(hz)
    
    rospy.loginfo('Connecting to mikrotik device {u}@{h}:{p}'.format(u=user, h=hostname, p=port))
    try:
        mikrotik_api = MikrotikWatcher(hostname, port, user, psk, chip)
    except socket.error as err:
        raise socket.error('Failed to connect find mikrotik device at {h}:{p}\n{e}'.format(h=hostname, p=port, e=err))
    if device is None:
        detected_interfaces = mikrotik_api.getWirelessInterfaces()
        try:
            device = detected_interfaces[0]['=name']
        except KeyError, IndexError:
            raise ValueError('No wireless device was set and none could be identified')
    while not rospy.is_shutdown():
        mikrotik_api.publishNetworkHealth(device, robot)
        rate.sleep()
        
    
